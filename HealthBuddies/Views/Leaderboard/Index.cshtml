@model IEnumerable<HealthBuddies.Models.UserProfileModel>

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Fitness Leaderboard</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Itim', cursive;
        }
        .button-background {
            background-color: #EBAF26
        }
    </style>
</head>

<body class="bg-gray-100 p-10">

    <div class="bg-gradient-to-b from-blue-400 to-blue-600 p-8 rounded-xl shadow-lg w-3/4 mx-auto">
        <div class="rounded-lg p-6">

            <div class="flex justify-between items-center mb-6">
                <h1 class="font-bold text-5xl text-white">Fitness Leaderboard</h1>
            </div>

            <p class="text-center text-white mb-4">See how you compare to others</p>

            <!-- Sorting Form -->
            <form method="get" action="@Url.Action("Index", "Leaderboard")" style="max-height: 35px;" class="mb-4">
                <label for="sortCriteria" class="text-white">Sort by:</label>
                <select name="sortCriteria" id="sortCriteria" class="bg-purple-500 border-2 text-white rounded-full px-4 py-1 pr-8 focus:outline-none focus:border-black-500">
                    <option value="steps" class="text-white">Steps</option>
                    <option value="points" class="text-white">Points</option>
                </select>
                <button type="submit" class="button-background text-white px-4 py-1.5 border-2 rounded-full ml-4 focus:outline-none focus:shadow-outline-black">Sort</button>
            </form>

            <div class="flex justify-between mb-6">
                <div class="flex items-center space-x-2">
                    <div class="w-4 h-4 bg-green-500 rounded-full"></div>
                    <p class="text-white">Top Stepper</p>
                    <span class="bg-green-500 text-white px-2 py-1 rounded">15,000 Steps</span>
                </div>
                <div class="flex items-center space-x-2">
                    <div class="w-4 h-4 bg-red-500 rounded-full"></div>
                    <p class="text-white">Your Rank</p>
                    <span class="bg-red-500 text-white px-2 py-1 rounded">1</span>
                </div>
            </div>

            <!-- Leaderboard list -->
            <div class="hidden sm:block overflow-x-auto mt-6">
                <table class="min-w-full text-center border-collapse">
                    <thead class="bg-gradient-to-r from-green-400 to-green-600 text-white">
                        <tr>
                            <th scope="col" class="px-6 py-3 font-bold">Rank</th>
                            <th scope="col" class="px-6 py-3 font-bold">UserID</th>
                            <th scope="col" class="px-6 py-3 font-bold">Username</th>
                            <th scope="col" class="px-6 py-3 font-bold">Steps</th>
                            <th scope="col" class="px-6 py-3 font-bold">Points</th>
                            <th scope="col" class="px-6 py-3 font-bold">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (item, index) in Model.Select((value, i) => (value, i)))
                        {
                            var rank = index + 1;
                            <tr class="@(rank == 1 ? "bg-yellow-300" : "bg-white") hover:bg-gray-200">
                                <td class="px-6 py-4 text-gray-800 font-semibold">
                                    @if (rank == 1)
                                    {
                                        <span class="text-yellow-500 mr-2">🏆</span>
                                    }
                                    else
                                    {
                                        <span class="text-transparent mr-2">🏆</span> <!-- Transparent icon for spacing -->
                                    }
                                    @rank
                                </td>
                                <td class="px-6 py-4 text-gray-800">@Html.DisplayFor(modelItem => item.uid)</td>
                                <td class="px-6 py-4 text-gray-800">@Html.DisplayFor(modelItem => item.username)</td>
                                <td class="px-6 py-4 text-gray-800">@Html.DisplayFor(modelItem => item.dailySteps)</td>
                                <td class="px-6 py-4 text-gray-800">@Html.DisplayFor(modelItem => item.userCurrency)</td>
                                <td class="px-6 py-4">
                                    <a href="#" class="text-blue-500 hover:text-blue-700 mr-2">Edit</a>
                                    <a href="#" class="text-green-500 hover:text-green-700 mr-2">Details</a>
                                    <a href="#" class="text-red-500 hover:text-red-700">Delete</a>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>

            </div>

            <div class="sm:hidden">
                @foreach (var (item, index) in Model.Select((value, i) => (value, i)))
                {
                    <div class="bg-white rounded-lg shadow-md p-4 mb-4">
                        <div class="font-bold text-xl mb-2">User: @Html.DisplayFor(modelItem => item.username)</div>
                        <p class="text-gray-700 text-base mb-4">
                            
                            @{ var rank = index + 1; }@rank
                        </p>
                        <p class="text-gray-700 text-base mb-4">
                            UserID: @Html.DisplayFor(modelItem => item.uid)
                        </p>
                        <p class="text-gray-700 text-base mb-4">
                            Steps: @Html.DisplayFor(modelItem => item.dailySteps)
                        </p>
                        <p class="text-gray-700 text-base mb-4">
                            Points: @Html.DisplayFor(modelItem => item.userCurrency)
                        </p>
                        <div class="flex">
                            <a href="#" class="text-blue-500 hover:text-blue-700 mr-4">Edit</a>
                            <a href="#" class="text-green-500 hover:text-green-700 mr-4">Details</a>
                            <a href="#" class="text-red-500 hover:text-red-700">Delete</a>
                        </div>
                    </div>
                }
            </div>

        </div>
    </div>
</body>

</html>
